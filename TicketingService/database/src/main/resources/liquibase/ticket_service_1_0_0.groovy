package liquibase

databaseChangeLog(logicalFilePath: 'ticket_service_1_0_0.groovy') {

    changeSet(id: '01_InitUserSTable', author: 'MatrayM') {

        comment 'Create USERS table'

        createTable(tableName: 'USERS', schemaName: 'OTP_TICKET') {
            column(name: 'USER_ID', type: 'NUMBER(38,0)', remarks: 'Id generated by sequence') {
                constraints(primaryKey: true, primaryKeyName: 'PK_USERS_ID')
            }
            column(name: 'NAME', type: 'VARCHAR2(200 CHAR)', remarks: 'The name of the user') {
                constraints(nullable: false)
            }
            column(name: 'EMAIL', type: 'VARCHAR2(1000 CHAR)', remarks: 'The email of the user') {
                constraints(nullable: false)
            }
        }
        createSequence(sequenceName: 'USERS_S', schemaName: 'OTP_TICKET', startValue: 1000, incrementBy: 1000)

        rollback {
            dropSequence(sequenceName: 'USERS_S')
            dropTable(tableName: 'USERS')
        }

    }

    changeSet(id: '02_InitUserDeviceTable', author: 'MatrayM') {

        comment 'Create USER_DEVICE table with foreign key constraint ant index'

        createTable(tableName: 'USER_DEVICE', schemaName: 'OTP_TICKET') {
            column(name: 'ID', type: 'NUMBER(38,0)', remarks: 'Id generated by sequence') {
                constraints(primaryKey: true, primaryKeyName: 'PK_USER_DEVICE_ID')
            }
            column(name: 'USER_ID', type: 'NUMBER(38,0)', remarks: 'The user\'s id') {
                constraints(nullable: false)
            }
            column(name: 'DEVICE_HASH', type: 'VARCHAR2(1000 CHAR)', remarks: 'Device hash belonging to the user') {
                constraints(nullable: false)
            }
        }

        addForeignKeyConstraint(constraintName: 'USER_ID_DEVICE_FK',
                baseTableName: 'USER_DEVICE',
                baseColumnNames: 'USER_ID',
                referencedTableName: 'USERS',
                referencedColumnNames: 'USER_ID',
                onDelete: 'NO ACTION',
                onUpdate: 'NO ACTION')

        createIndex(schemaName: 'OTP_TICKET', tableName: 'USER_DEVICE', indexName: 'USER_ID_DEVICE_IDX') {
            column(name: 'USER_ID')
        }

        createSequence(sequenceName: 'USER_DEVICE_S', schemaName: 'OTP_TICKET', startValue: 1000, incrementBy: 1000)

        rollback {
            dropSequence(sequenceName: 'USER_DEVICE_S')
            dropTable(tableName: 'USER_DEVICE')
        }

    }

    changeSet(id: '03_InitUserTokenTable', author: 'MatrayM') {

        comment 'Create USER_TOKEN table with foreign key constraint ant index'

        createTable(tableName: 'USER_TOKEN', schemaName: 'OTP_TICKET') {
            column(name: 'ID', type: 'NUMBER(38,0)', remarks: 'Id generated by sequence') {
                constraints(primaryKey: true, primaryKeyName: 'PK_USER_TOKEN_ID')
            }
            column(name: 'USER_ID', type: 'NUMBER(38,0)', remarks: 'The user\'s id') {
                constraints(nullable: false)
            }
            column(name: 'TOKEN', type: 'VARCHAR2(1000 CHAR)', remarks: 'Token belonging to the user') {
                constraints(nullable: false)
            }
        }

        addForeignKeyConstraint(constraintName: 'USER_ID_TOKEN_FK',
                baseTableName: 'USER_TOKEN',
                baseColumnNames: 'USER_ID',
                referencedTableName: 'USERS',
                referencedColumnNames: 'USER_ID',
                onDelete: 'NO ACTION',
                onUpdate: 'NO ACTION')

        createIndex(schemaName: 'OTP_TICKET', tableName: 'USER_TOKEN', indexName: 'USER_ID_TOKEN_IDX') {
            column(name: 'USER_ID')
        }

        createSequence(sequenceName: 'USER_TOKEN_S', schemaName: 'OTP_TICKET', startValue: 1000, incrementBy: 1000)

        rollback {
            dropSequence(sequenceName: 'USER_TOKEN_S')
            dropTable(tableName: 'USER_TOKEN')
        }

    }

    changeSet(id: '04_InitUserBankCardTable', author: 'MatrayM') {

        comment 'Create USER_BANK_CARD table with foreign key constraint ant index'

        createTable(tableName: 'USER_BANK_CARD', schemaName: 'OTP_TICKET') {
            column(name: 'ID', type: 'NUMBER(38,0)', remarks: 'Id generated by sequence') {
                constraints(primaryKey: true, primaryKeyName: 'PK_USER_BANK_CARD_ID')
            }
            column(name: 'USER_ID', type: 'NUMBER(38,0)', remarks: 'The user\'s id') {
                constraints(nullable: false)
            }
            column(name: 'CARD_ID', type: 'VARCHAR2(100 CHAR)', remarks: 'ID of the card') {
                constraints(nullable: false)
            }
            column(name: 'CARD_NUMBER', type: 'VARCHAR2(40 CHAR)', remarks: 'The number of the card') {
                constraints(nullable: false)
            }
            column(name: 'CVC', type: 'VARCHAR2(4 CHAR)', remarks: 'CVC code of the card') {
                constraints(nullable: false)
            }
            column(name: 'NAME', type: 'VARCHAR2(300 CHAR)', remarks: 'Name on card') {
                constraints(nullable: false)
            }
            column(name: 'AMOUNT', type: 'NUMBER(38,0)', remarks: 'The card\'s balance') {
                constraints(nullable: false)
            }
            column(name: 'CURRENCY', type: 'VARCHAR2(3 CHAR)', remarks: 'Token belonging to the user') {
                constraints(nullable: false)
            }
        }

        addForeignKeyConstraint(constraintName: 'USER_ID_BANK_CARD_FK',
                baseTableName: 'USER_BANK_CARD',
                baseColumnNames: 'USER_ID',
                referencedTableName: 'USERS',
                referencedColumnNames: 'USER_ID',
                onDelete: 'NO ACTION',
                onUpdate: 'NO ACTION')

        createIndex(schemaName: 'OTP_TICKET', tableName: 'USER_BANK_CARD', indexName: 'USER_ID_BANK_CARD_IDX') {
            column(name: 'USER_ID')
        }

        createSequence(sequenceName: 'USER_BANK_CARD_S', schemaName: 'OTP_TICKET', startValue: 1000, incrementBy: 1000)

        rollback {
            dropSequence(sequenceName: 'USER_BANK_CARD_S')
            dropTable(tableName: 'USER_BANK_CARD')
        }

    }
}
